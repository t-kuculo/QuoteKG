<<<<<<< HEAD
intermediate/
CompleteQuotes/
CompleteQuotes2/
corpus/
corpus_0/
env/
env2/
Xenv/
old/
protobuf/
py-googletrans/
v1/
v1_final/
v2/
v2_final/
__pycache__/
jsons/
jsons_0/

/intermediate
/CompleteQuotes
/CompleteQuotes2
/corpus
/corpus_0
/env
/env2
/Xenv
/old
/protobuf
/py-googletrans
/v1
/v1_final
/v2
/v2_final
/__pycache__
=======
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Data
embeddings/
embeddings0/
embeddings_0/
embeddings1/
embeddings_1/
quotekg/
quotekg-jsonload-master/
notebooks/
statistics/
jsons/
v1/
v2_modified/
v3_modified/
v4_modified/
v5/
entities_by_language/
completeQuotes/
completeQuotes_with_dates/
completeQuotes_v3/
completeQuotes_v4/
final_embeddings/
corpus/
is_formatedjson.json
file.txt
entity_languages.txt
all_data.json
quote.tar.gz
test.py


# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
env2/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
>>>>>>> 8e25dd39d45b7ce7368cf03ad5e5959db5fdd5aa
